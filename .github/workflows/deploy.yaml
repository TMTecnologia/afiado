name: Deploy

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
    branches:
      - main

concurrency:
  # For PRs, use PR number to group concurrent runs
  # Only apply concurrency to the same environment
  # This ensures we don't cancel production deployments for development PRs
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-${{ github.event_name == 'push' && 'prod' || 'dev' }}
  cancel-in-progress: true

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    permissions:
      contents: read
      deployments: write

    outputs:
      deployment_url: ${{ steps.cloudflare_deploy.outputs.deployment-url }}

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4

      - name: üì¶ Cache Bun
        uses: actions/cache@v3
        with:
          path: |
            ~/.bun
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: üì¶ Cache Next.js
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
            ${{ github.workspace }}/.next/static
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-

      - name: üîß Setup bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: package.json

      - name: ‚è≥ Install dependencies
        run: bun install --frozen-lockfile

      - name: üë∑ Build
        run: bun run pages:build
        env:
          NEXT_PUBLIC_AHREFS_ANALYTICS_KEY: ${{ secrets.AHREFS_ANALYTICS_KEY }}
          NEXT_PUBLIC_CONVEX_URL: ${{ github.event_name == 'push' && secrets.CONVEX_PROD_URL || secrets.CONVEX_DEV_URL }}
          NEXT_PUBLIC_POSTHOG_KEY: ${{ secrets.POSTHOG_KEY }}
          NEXT_PUBLIC_POSTHOG_HOST: "https://us.i.posthog.com"
          NEXT_PUBLIC_POSTHOG_STATIC_ASSETS_HOST: "https://us-assets.i.posthog.com/static"

      - name: üöÄ Deploy to Cloudflare Pages
        id: cloudflare_deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: üöÄ Deploy to Convex
        if: github.event_name == 'push'
        run: bunx convex deploy
        env:
          CONVEX_DEPLOY_KEY: ${{ secrets.CONVEX_DEPLOY_KEY }}

  accessibility:
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
      - name: üì¶ Cache Bun
        uses: actions/cache@v3
        with:
          path: ~/.bun
          key: ${{ runner.os }}-a11y-bun

      - name: üîß Setup bun
        uses: oven-sh/setup-bun@v2

      - name: ‚è≥ Install Pa11y CI
        run: bun add -g pa11y-ci

      - name: üéØ Accessibility Testing
        run: pa11y-ci ${{ needs.deploy.outputs.deployment_url }}

  performance:
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
      - name: ‚ö° Performance Testing
        uses: treosh/lighthouse-ci-action@v9
        with:
          urls: ${{ needs.deploy.outputs.deployment_url }}
          uploadArtifacts: true
          temporaryPublicStorage: true
